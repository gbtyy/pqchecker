#!/bin/bash
# pqMessenger starting shell script
# (c) 2014 Abdelhamid MEDDEB <abdelhamid@meddeb.net>

. /lib/lsb/init-functions

if [ -r /etc/default/pqmessenger ]; then
	. /etc/default/pqmessenger
fi

PQMESSENGER_STARTUP="net.meddeb.pqmessenger.MsgDaemon"
PIDFILE="$RUN_HOME/pqmessenger.pid"
OUTFILE="$LOG_HOME/pqmessenger.out"
CONFIGFILE="$CONFIG_HOME"
CLASSPATH="$PQMESSENGER_HOME/*.jar"
PQMESSENGER_ARGS="--config-file $CONFIGFILE --msg-server-id $MSGSERVER_ID --connection-retry-time $CNX_RETRY_TIME"
JSVC_ARGS="-java-home $JAVA_HOME -user $PQMESSENGER_USER -pidfile $PIDFILE -outfile $OUTFILE -errfile &1 -cp $CLASSPATH"
JAVA_ARGS="-Djava.library.path=$NATIVE_LIB_HOME"
RETVAL=0
GRNTXT='\e[0;32m'
REDTXT='\e[0;31m'
REGTXT='\e[0m'

# pid function, return pqMessenger pid
pqmessengerPid() {
  PID=$( ps -ef | grep "$PQMESSENGER_STARTUP" | grep -v grep | grep -v root | awk '{print $2}' )
  echo $PID
}

# print in red color
showRed() {
  echo -ne $REDTXT
  echo -e "$1$REGTXT"
}

# print in green color
showGreen() {
  echo -ne $GRNTXT
  echo -e "$1$REGTXT"
}

# start function
do_start(){
  DAEMONPID=$( pqmessengerPid )
  if [ -z $DAEMONPID ]; then
    echo -n "Starting pqMessenger... "
    $JSVC \
    $JSVC_ARGS \
    $JAVA_ARGS \
    $PQMESSENGER_STARTUP \
    $PQMESSENGER_ARGS
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
      showGreen "Ok."
    else
      showRed "Error."
    fi 
  else
    showRed "Already running"
    RETVAL=0
  fi       
}

# stop function
do_stop(){
  DAEMONPID=$( pqmessengerPid )
  #if [ "$DAEMONPID" != "" ]; then
  if [ ! -z $DAEMONPID ]; then
    echo -n "Stopping pqMessenger... "
    $JSVC \
    $JSVC_ARGS \
    -stop \
    $PQMESSENGER_STARTUP
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
      showGreen "Ok."
    else
      showRed "Error."
    fi
  else      
    showRed "Not running"
    RETVAL=0
  fi
}

# status function
do_status(){
  DAEMONPID=$( pqmessengerPid )
  if [ -z $DAEMONPID ]; then
    showRed "Stopped."
   else
    showGreen "Running."
  fi    
}

# main
case "$1" in
  start)
    do_start;
    ;;
  stop)
    do_stop
    ;;
  restart)
 	  do_stop
	  sleep 1
	  do_start
	  ;;
  status)
    do_status
    ;;  
  *)
    echo "Usage: $0 start|stop|restart|status" >&2
    exit 3
    ;;
esac
